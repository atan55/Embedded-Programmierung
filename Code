#include <avr/io.h>
#include <util/delay.h>
#define LCDDR_RS    DDRA
#define LCDDR_E     DDRD
#define LCDDR_D     DDRC
#define LCDPORT_RS  PORTA
#define LCDPORT_E   PORTD
#define LCDPORT_D   PORTC
#define LCD_RS      PA2
#define LCD_E       PD6

void enable(){

    LCDPORT_E |= (1<<LCD_E);
    _delay_us(1);
    LCDPORT_E &= ~(1<<LCD_E);
    _delay_us(4100);
}

void lcd_command(uint8_t c){

    LCDPORT_RS &= ~(1<<LCD_RS);
    LCDPORT_D = (c & 0xF0);
    enable();
    LCDPORT_D = (c<<4);
    enable();
}

void lcd_init(){

    _delay_ms(15);
    LCDDR_RS |= (1<<LCD_RS);
    LCDDR_E  |= (1<<LCD_E);
    LCDDR_D  |= 0b11110000;

    lcd_command(0x33);
    lcd_command(0x32);
    lcd_command(0x28);
    lcd_command(0x01);
    lcd_command(0x0c);
}

void lcd_data(uint8_t d){

    LCDPORT_RS |= (1<<LCD_RS); // RS-Bit setzen (Daten!)
    LCDPORT_D &= 0x0F; // High-Nibble löschen
    LCDPORT_D |= (d & 0xF0); // High-Nibble von c setzen
    //LCDPORT_D = (d & 0xF0);
    enable(); // übertragen
    LCDPORT_D &= 0x0F; // High-Nibble löschen
    LCDPORT_D |= (d << 4); // Low-Nibble von c setzen
    //LCDPORT_D = (d<<4);
    enable(); // übertragen
}

void lcd_setpos(uint8_t z, uint8_t s){

    lcd_command((z*(0x40)+s)|0x80);
}

void lcd_zahlen1(uint8_t z1){

    lcd_data((z1/100)+'0');
    lcd_data(((z1/10)%10)+'0');
    lcd_data((z1%10)+'0');
}

void lcd_zahlen2(uint8_t z2){

    if(z2>99){
        lcd_data((z2/100)+'0');
    }
    if(z2 > 9){
        lcd_data(((z2/10)%10)+'0');
    }
    lcd_data((z2%10)+'0');
}

void lcd_zahlen3(uint8_t z1){

    lcd_data(((z1/10)%10)+'0');
    lcd_data((z1%10)+'0');
}

int main(void)
{
    lcd_init();

    int se = 0;
    int m = 0;
    int st = 0;

    while(1){

        se++;
        if(se == 60){
            m += 1;
            se = 0;
        }
        else if(m == 60){
            st += 1;
            m = 0;
        }
        if(st == 24){

            st = 0;
        }

        lcd_setpos(0,0);
        lcd_zahlen3(st);
        lcd_data(':');
        lcd_zahlen3(m);
        lcd_data(':');
        lcd_zahlen3(se);

        _delay_ms(10);
    };

    while(1);
    return 0;
}
